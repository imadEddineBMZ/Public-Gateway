/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplicationUserDTO extends Parsable {
    firstName: any;
    lastName: any;
    username: string;
    email: string;
    wilaya: any;
    /**
     * The communeId property
     */
    communeId?: number | null;
    /**
     * The donorAvailability property
     */
    donorAvailability?: number | null;
    /**
     * The donorBirthDate property
     */
    donorBirthDate?: Date | null;
    /**
     * The donorBloodGroup property
     */
    donorBloodGroup?: number | null;
    /**
     * The donorContactMethod property
     */
    donorContactMethod?: number | null;
    /**
     * The donorCorrelationId property
     */
    donorCorrelationId?: string | null;
    /**
     * The donorExcludeFromPublicPortal property
     */
    donorExcludeFromPublicPortal?: boolean | null;
    /**
     * The donorLastDonationDate property
     */
    donorLastDonationDate?: Date | null;
    /**
     * The donorName property
     */
    donorName?: string | null;
    /**
     * The donorNIN property
     */
    donorNIN?: string | null;
    /**
     * The donorNotesForBTC property
     */
    donorNotesForBTC?: string | null;
    /**
     * The donorTel property
     */
    donorTel?: string | null;
    /**
     * The donorWantToStayAnonymous property
     */
    donorWantToStayAnonymous?: boolean | null;
}
export interface BloodDonationPledgeDTO extends Parsable {
    bloodDonationRequest: any;
    /**
     * The applicationUserId property
     */
    applicationUserId?: string | null;
    /**
     * The bloodDonationRequestId property
     */
    bloodDonationRequestId?: string | null;
    /**
     * The cantBeDoneReason property
     */
    cantBeDoneReason?: string | null;
    /**
     * The evolutionStatus property
     */
    evolutionStatus?: number | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The pledgeDate property
     */
    pledgeDate?: Date | null;
    /**
     * The pledgeHonoredOrCanceledDate property
     */
    pledgeHonoredOrCanceledDate?: Date | null;
    /**
     * The pledgeInitiatedDate property
     */
    pledgeInitiatedDate?: Date | null;
    /**
     * The pledgeNotes property
     */
    pledgeNotes?: string | null;
}
export interface BloodDonationRequestDTO extends Parsable {
    /**
     * The bloodGroup property
     */
    bloodGroup?: number | null;
    /**
     * The bloodTansfusionCenter property
     */
    bloodTansfusionCenter?: BloodTansfusionCenterDTO | null;
    /**
     * The bloodTansfusionCenterId property
     */
    bloodTansfusionCenterId?: string | null;
    /**
     * The donationType property
     */
    donationType?: number | null;
    /**
     * The evolutionStatus property
     */
    evolutionStatus?: number | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The moreDetails property
     */
    moreDetails?: string | null;
    /**
     * The priority property
     */
    priority?: number | null;
    /**
     * The requestDate property
     */
    requestDate?: Date | null;
    /**
     * The requestDueDate property
     */
    requestDueDate?: Date | null;
    /**
     * The requestedQty property
     */
    requestedQty?: number | null;
    /**
     * The serviceName property
     */
    serviceName?: string | null;
}
export interface BloodTansfusionCenterDTO extends Parsable {
    /**
     * The address property
     */
    address?: string | null;
    /**
     * The bloodDonationRequests property
     */
    bloodDonationRequests?: BloodDonationRequestDTO[] | null;
    /**
     * The contact property
     */
    contact?: string | null;
    /**
     * The donorBloodTransferCenterSubscriptions property
     */
    donorBloodTransferCenterSubscriptions?: DonorBloodTransferCenterSubscriptionsDTO[] | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The tel property
     */
    tel?: string | null;
    /**
     * The wilaya property
     */
    wilaya?: WilayaDTO | null;
    /**
     * The wilayaId property
     */
    wilayaId?: number | null;
}
export interface BloodTansfusionCenterExDTO extends AdditionalDataHolder, BloodTansfusionCenterDTO, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The loggedUserSubscribed property
     */
    loggedUserSubscribed?: boolean | null;
}
export interface CommuneDTO extends Parsable {
    /**
     * The applicationUsers property
     */
    applicationUsers?: ApplicationUserDTO[] | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The wilaya property
     */
    wilaya?: WilayaDTO | null;
    /**
     * The wilayaId property
     */
    wilayaId?: number | null;
}
export interface ContributorDTO extends Parsable {
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
}
export interface ContributorListResponse extends Parsable {
    /**
     * The contributors property
     */
    contributors?: ContributorRecord[] | null;
}
export interface ContributorRecord extends Parsable {
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApplicationUserDTO}
 */
// @ts-ignore
export function createApplicationUserDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApplicationUserDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BloodDonationPledgeDTO}
 */
// @ts-ignore
export function createBloodDonationPledgeDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBloodDonationPledgeDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BloodDonationRequestDTO}
 */
// @ts-ignore
export function createBloodDonationRequestDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBloodDonationRequestDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BloodTansfusionCenterDTO}
 */
// @ts-ignore
export function createBloodTansfusionCenterDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBloodTansfusionCenterDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BloodTansfusionCenterExDTO}
 */
// @ts-ignore
export function createBloodTansfusionCenterExDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBloodTansfusionCenterExDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CommuneDTO}
 */
// @ts-ignore
export function createCommuneDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCommuneDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContributorDTO}
 */
// @ts-ignore
export function createContributorDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContributorDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContributorListResponse}
 */
// @ts-ignore
export function createContributorListResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContributorListResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContributorRecord}
 */
// @ts-ignore
export function createContributorRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContributorRecord;
}
export interface CreateContributorRequest extends Parsable {
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
}
export interface CreateContributorResponse extends Parsable {
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateContributorRequest}
 */
// @ts-ignore
export function createCreateContributorRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateContributorRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateContributorResponse}
 */
// @ts-ignore
export function createCreateContributorResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateContributorResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatePledgeRequest}
 */
// @ts-ignore
export function createCreatePledgeRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatePledgeRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatePledgeResponse}
 */
// @ts-ignore
export function createCreatePledgeResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatePledgeResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateSubscriptionRequest}
 */
// @ts-ignore
export function createCreateSubscriptionRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateSubscriptionRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateSubscriptionResponse}
 */
// @ts-ignore
export function createCreateSubscriptionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateSubscriptionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DashboardStatsDTO_pledgesByStatus}
 */
// @ts-ignore
export function createDashboardStatsDTO_pledgesByStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDashboardStatsDTO_pledgesByStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DashboardStatsDTO_requestsByBloodGroup}
 */
// @ts-ignore
export function createDashboardStatsDTO_requestsByBloodGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDashboardStatsDTO_requestsByBloodGroup;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DashboardStatsDTO_requestsByWilaya}
 */
// @ts-ignore
export function createDashboardStatsDTO_requestsByWilayaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDashboardStatsDTO_requestsByWilaya;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DashboardStatsDTO}
 */
// @ts-ignore
export function createDashboardStatsDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDashboardStatsDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DonorBloodTransferCenterSubscriptionsDTO}
 */
// @ts-ignore
export function createDonorBloodTransferCenterSubscriptionsDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDonorBloodTransferCenterSubscriptionsDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetBTCsubscribedResponse}
 */
// @ts-ignore
export function createGetBTCsubscribedResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetBTCsubscribedResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetDashboardStatsResponse}
 */
// @ts-ignore
export function createGetDashboardStatsResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetDashboardStatsResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetUserByIdEndpointResponse}
 */
// @ts-ignore
export function createGetUserByIdEndpointResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetUserByIdEndpointResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListApplicationUsersResponse}
 */
// @ts-ignore
export function createListApplicationUsersResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListApplicationUsersResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListBloodDonationRequestsResponse}
 */
// @ts-ignore
export function createListBloodDonationRequestsResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListBloodDonationRequestsResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListBloodTansfusionCentersResponse}
 */
// @ts-ignore
export function createListBloodTansfusionCentersResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListBloodTansfusionCentersResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListCommunesEndpointResponse}
 */
// @ts-ignore
export function createListCommunesEndpointResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListCommunesEndpointResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListPledgesResponse}
 */
// @ts-ignore
export function createListPledgesResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListPledgesResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ListWilayasResponse}
 */
// @ts-ignore
export function createListWilayasResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoListWilayasResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginRequest}
 */
// @ts-ignore
export function createLoginRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginRequest;
}
export interface CreatePledgeRequest extends Parsable {
    /**
     * The bloodDonationRequestId property
     */
    bloodDonationRequestId?: string | null;
    /**
     * The pledgeDate property
     */
    pledgeDate?: Date | null;
    /**
     * The pledgeNotes property
     */
    pledgeNotes?: string | null;
}
export interface CreatePledgeResponse extends Parsable {
    /**
     * The bloodDonationPledge property
     */
    bloodDonationPledge?: BloodDonationPledgeDTO | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProblemDetails_Error}
 */
// @ts-ignore
export function createProblemDetails_ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProblemDetails_Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProblemDetails}
 */
// @ts-ignore
export function createProblemDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProblemDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegisterUserDto}
 */
// @ts-ignore
export function createRegisterUserDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegisterUserDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegisterUserRequest}
 */
// @ts-ignore
export function createRegisterUserRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegisterUserRequest;
}
export interface CreateSubscriptionRequest extends Parsable {
    /**
     * The bloodTansfusionCenterId property
     */
    bloodTansfusionCenterId?: string | null;
}
export interface CreateSubscriptionResponse extends Parsable {
    /**
     * The subscription property
     */
    subscription?: DonorBloodTransferCenterSubscriptionsDTO | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateContributorRequest}
 */
// @ts-ignore
export function createUpdateContributorRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateContributorRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateContributorResponse}
 */
// @ts-ignore
export function createUpdateContributorResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateContributorResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePledgeRequest}
 */
// @ts-ignore
export function createUpdatePledgeRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePledgeRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePledgeResponse}
 */
// @ts-ignore
export function createUpdatePledgeResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePledgeResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateProfileRequest}
 */
// @ts-ignore
export function createUpdateProfileRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateProfileRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateProfileResponse}
 */
// @ts-ignore
export function createUpdateProfileResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateProfileResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateUserDTO}
 */
// @ts-ignore
export function createUpdateUserDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateUserDTO;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WilayaDTO}
 */
// @ts-ignore
export function createWilayaDTOFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWilayaDTO;
}
export interface DashboardStatsDTO extends Parsable {
    /**
     * The activePledges property
     */
    activePledges?: number | null;
    /**
     * The pledgesByStatus property
     */
    pledgesByStatus?: DashboardStatsDTO_pledgesByStatus | null;
    /**
     * The requestsByBloodGroup property
     */
    requestsByBloodGroup?: DashboardStatsDTO_requestsByBloodGroup | null;
    /**
     * The requestsByWilaya property
     */
    requestsByWilaya?: DashboardStatsDTO_requestsByWilaya | null;
    /**
     * The totalBloodCenters property
     */
    totalBloodCenters?: number | null;
    /**
     * The totalBloodRequests property
     */
    totalBloodRequests?: number | null;
    /**
     * The totalDonors property
     */
    totalDonors?: number | null;
    /**
     * The totalSubscriptions property
     */
    totalSubscriptions?: number | null;
}
export interface DashboardStatsDTO_pledgesByStatus extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface DashboardStatsDTO_requestsByBloodGroup extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface DashboardStatsDTO_requestsByWilaya extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApplicationUserDTO(applicationUserDTO: Partial<ApplicationUserDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "communeId": n => { applicationUserDTO.communeId = n.getNumberValue(); },
        "donorAvailability": n => { applicationUserDTO.donorAvailability = n.getNumberValue(); },
        "donorBirthDate": n => { applicationUserDTO.donorBirthDate = n.getDateValue(); },
        "donorBloodGroup": n => { applicationUserDTO.donorBloodGroup = n.getNumberValue(); },
        "donorContactMethod": n => { applicationUserDTO.donorContactMethod = n.getNumberValue(); },
        "donorCorrelationId": n => { applicationUserDTO.donorCorrelationId = n.getStringValue(); },
        "donorExcludeFromPublicPortal": n => { applicationUserDTO.donorExcludeFromPublicPortal = n.getBooleanValue(); },
        "donorLastDonationDate": n => { applicationUserDTO.donorLastDonationDate = n.getDateValue(); },
        "donorName": n => { applicationUserDTO.donorName = n.getStringValue(); },
        "donorNIN": n => { applicationUserDTO.donorNIN = n.getStringValue(); },
        "donorNotesForBTC": n => { applicationUserDTO.donorNotesForBTC = n.getStringValue(); },
        "donorTel": n => { applicationUserDTO.donorTel = n.getStringValue(); },
        "donorWantToStayAnonymous": n => { applicationUserDTO.donorWantToStayAnonymous = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBloodDonationPledgeDTO(bloodDonationPledgeDTO: Partial<BloodDonationPledgeDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "applicationUserId": n => { bloodDonationPledgeDTO.applicationUserId = n.getStringValue(); },
        "bloodDonationRequestId": n => { bloodDonationPledgeDTO.bloodDonationRequestId = n.getStringValue(); },
        "cantBeDoneReason": n => { bloodDonationPledgeDTO.cantBeDoneReason = n.getStringValue(); },
        "evolutionStatus": n => { bloodDonationPledgeDTO.evolutionStatus = n.getNumberValue(); },
        "id": n => { bloodDonationPledgeDTO.id = n.getStringValue(); },
        "pledgeDate": n => { bloodDonationPledgeDTO.pledgeDate = n.getDateValue(); },
        "pledgeHonoredOrCanceledDate": n => { bloodDonationPledgeDTO.pledgeHonoredOrCanceledDate = n.getDateValue(); },
        "pledgeInitiatedDate": n => { bloodDonationPledgeDTO.pledgeInitiatedDate = n.getDateValue(); },
        "pledgeNotes": n => { bloodDonationPledgeDTO.pledgeNotes = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBloodDonationRequestDTO(bloodDonationRequestDTO: Partial<BloodDonationRequestDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodGroup": n => { bloodDonationRequestDTO.bloodGroup = n.getNumberValue(); },
        "bloodTansfusionCenter": n => { bloodDonationRequestDTO.bloodTansfusionCenter = n.getObjectValue<BloodTansfusionCenterDTO>(createBloodTansfusionCenterDTOFromDiscriminatorValue); },
        "bloodTansfusionCenterId": n => { bloodDonationRequestDTO.bloodTansfusionCenterId = n.getStringValue(); },
        "donationType": n => { bloodDonationRequestDTO.donationType = n.getNumberValue(); },
        "evolutionStatus": n => { bloodDonationRequestDTO.evolutionStatus = n.getNumberValue(); },
        "id": n => { bloodDonationRequestDTO.id = n.getStringValue(); },
        "moreDetails": n => { bloodDonationRequestDTO.moreDetails = n.getStringValue(); },
        "priority": n => { bloodDonationRequestDTO.priority = n.getNumberValue(); },
        "requestDate": n => { bloodDonationRequestDTO.requestDate = n.getDateValue(); },
        "requestDueDate": n => { bloodDonationRequestDTO.requestDueDate = n.getDateValue(); },
        "requestedQty": n => { bloodDonationRequestDTO.requestedQty = n.getNumberValue(); },
        "serviceName": n => { bloodDonationRequestDTO.serviceName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBloodTansfusionCenterDTO(bloodTansfusionCenterDTO: Partial<BloodTansfusionCenterDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { bloodTansfusionCenterDTO.address = n.getStringValue(); },
        "bloodDonationRequests": n => { bloodTansfusionCenterDTO.bloodDonationRequests = n.getCollectionOfObjectValues<BloodDonationRequestDTO>(createBloodDonationRequestDTOFromDiscriminatorValue); },
        "contact": n => { bloodTansfusionCenterDTO.contact = n.getStringValue(); },
        "donorBloodTransferCenterSubscriptions": n => { bloodTansfusionCenterDTO.donorBloodTransferCenterSubscriptions = n.getCollectionOfObjectValues<DonorBloodTransferCenterSubscriptionsDTO>(createDonorBloodTransferCenterSubscriptionsDTOFromDiscriminatorValue); },
        "email": n => { bloodTansfusionCenterDTO.email = n.getStringValue(); },
        "id": n => { bloodTansfusionCenterDTO.id = n.getStringValue(); },
        "name": n => { bloodTansfusionCenterDTO.name = n.getStringValue(); },
        "tel": n => { bloodTansfusionCenterDTO.tel = n.getStringValue(); },
        "wilaya": n => { bloodTansfusionCenterDTO.wilaya = n.getObjectValue<WilayaDTO>(createWilayaDTOFromDiscriminatorValue); },
        "wilayaId": n => { bloodTansfusionCenterDTO.wilayaId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBloodTansfusionCenterExDTO(bloodTansfusionCenterExDTO: Partial<BloodTansfusionCenterExDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBloodTansfusionCenterDTO(bloodTansfusionCenterExDTO),
        "loggedUserSubscribed": n => { bloodTansfusionCenterExDTO.loggedUserSubscribed = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCommuneDTO(communeDTO: Partial<CommuneDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "applicationUsers": n => { communeDTO.applicationUsers = n.getCollectionOfObjectValues<ApplicationUserDTO>(createApplicationUserDTOFromDiscriminatorValue); },
        "id": n => { communeDTO.id = n.getNumberValue(); },
        "name": n => { communeDTO.name = n.getStringValue(); },
        "wilaya": n => { communeDTO.wilaya = n.getObjectValue<WilayaDTO>(createWilayaDTOFromDiscriminatorValue); },
        "wilayaId": n => { communeDTO.wilayaId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContributorDTO(contributorDTO: Partial<ContributorDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { contributorDTO.id = n.getNumberValue(); },
        "name": n => { contributorDTO.name = n.getStringValue(); },
        "phoneNumber": n => { contributorDTO.phoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContributorListResponse(contributorListResponse: Partial<ContributorListResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contributors": n => { contributorListResponse.contributors = n.getCollectionOfObjectValues<ContributorRecord>(createContributorRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContributorRecord(contributorRecord: Partial<ContributorRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { contributorRecord.id = n.getNumberValue(); },
        "name": n => { contributorRecord.name = n.getStringValue(); },
        "phoneNumber": n => { contributorRecord.phoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateContributorRequest(createContributorRequest: Partial<CreateContributorRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { createContributorRequest.name = n.getStringValue(); },
        "phoneNumber": n => { createContributorRequest.phoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateContributorResponse(createContributorResponse: Partial<CreateContributorResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { createContributorResponse.id = n.getNumberValue(); },
        "name": n => { createContributorResponse.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatePledgeRequest(createPledgeRequest: Partial<CreatePledgeRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodDonationRequestId": n => { createPledgeRequest.bloodDonationRequestId = n.getStringValue(); },
        "pledgeDate": n => { createPledgeRequest.pledgeDate = n.getDateValue(); },
        "pledgeNotes": n => { createPledgeRequest.pledgeNotes = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatePledgeResponse(createPledgeResponse: Partial<CreatePledgeResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodDonationPledge": n => { createPledgeResponse.bloodDonationPledge = n.getObjectValue<BloodDonationPledgeDTO>(createBloodDonationPledgeDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateSubscriptionRequest(createSubscriptionRequest: Partial<CreateSubscriptionRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodTansfusionCenterId": n => { createSubscriptionRequest.bloodTansfusionCenterId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateSubscriptionResponse(createSubscriptionResponse: Partial<CreateSubscriptionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "subscription": n => { createSubscriptionResponse.subscription = n.getObjectValue<DonorBloodTransferCenterSubscriptionsDTO>(createDonorBloodTransferCenterSubscriptionsDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDashboardStatsDTO(dashboardStatsDTO: Partial<DashboardStatsDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activePledges": n => { dashboardStatsDTO.activePledges = n.getNumberValue(); },
        "pledgesByStatus": n => { dashboardStatsDTO.pledgesByStatus = n.getObjectValue<DashboardStatsDTO_pledgesByStatus>(createDashboardStatsDTO_pledgesByStatusFromDiscriminatorValue); },
        "requestsByBloodGroup": n => { dashboardStatsDTO.requestsByBloodGroup = n.getObjectValue<DashboardStatsDTO_requestsByBloodGroup>(createDashboardStatsDTO_requestsByBloodGroupFromDiscriminatorValue); },
        "requestsByWilaya": n => { dashboardStatsDTO.requestsByWilaya = n.getObjectValue<DashboardStatsDTO_requestsByWilaya>(createDashboardStatsDTO_requestsByWilayaFromDiscriminatorValue); },
        "totalBloodCenters": n => { dashboardStatsDTO.totalBloodCenters = n.getNumberValue(); },
        "totalBloodRequests": n => { dashboardStatsDTO.totalBloodRequests = n.getNumberValue(); },
        "totalDonors": n => { dashboardStatsDTO.totalDonors = n.getNumberValue(); },
        "totalSubscriptions": n => { dashboardStatsDTO.totalSubscriptions = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDashboardStatsDTO_pledgesByStatus(dashboardStatsDTO_pledgesByStatus: Partial<DashboardStatsDTO_pledgesByStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDashboardStatsDTO_requestsByBloodGroup(dashboardStatsDTO_requestsByBloodGroup: Partial<DashboardStatsDTO_requestsByBloodGroup> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDashboardStatsDTO_requestsByWilaya(dashboardStatsDTO_requestsByWilaya: Partial<DashboardStatsDTO_requestsByWilaya> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDonorBloodTransferCenterSubscriptionsDTO(donorBloodTransferCenterSubscriptionsDTO: Partial<DonorBloodTransferCenterSubscriptionsDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "applicationUser": n => { donorBloodTransferCenterSubscriptionsDTO.applicationUser = n.getObjectValue<ApplicationUserDTO>(createApplicationUserDTOFromDiscriminatorValue); },
        "applicationUserId": n => { donorBloodTransferCenterSubscriptionsDTO.applicationUserId = n.getStringValue(); },
        "bloodTansfusionCenter": n => { donorBloodTransferCenterSubscriptionsDTO.bloodTansfusionCenter = n.getObjectValue<BloodTansfusionCenterDTO>(createBloodTansfusionCenterDTOFromDiscriminatorValue); },
        "bloodTansfusionCenterId": n => { donorBloodTransferCenterSubscriptionsDTO.bloodTansfusionCenterId = n.getStringValue(); },
        "id": n => { donorBloodTransferCenterSubscriptionsDTO.id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetBTCsubscribedResponse(getBTCsubscribedResponse: Partial<GetBTCsubscribedResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "btCsubscribed": n => { getBTCsubscribedResponse.btCsubscribed = n.getCollectionOfObjectValues<DonorBloodTransferCenterSubscriptionsDTO>(createDonorBloodTransferCenterSubscriptionsDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetDashboardStatsResponse(getDashboardStatsResponse: Partial<GetDashboardStatsResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "stats": n => { getDashboardStatsResponse.stats = n.getObjectValue<DashboardStatsDTO>(createDashboardStatsDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetUserByIdEndpointResponse(getUserByIdEndpointResponse: Partial<GetUserByIdEndpointResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "user": n => { getUserByIdEndpointResponse.user = n.getObjectValue<ApplicationUserDTO>(createApplicationUserDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListApplicationUsersResponse(listApplicationUsersResponse: Partial<ListApplicationUsersResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "users": n => { listApplicationUsersResponse.users = n.getCollectionOfObjectValues<ApplicationUserDTO>(createApplicationUserDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListBloodDonationRequestsResponse(listBloodDonationRequestsResponse: Partial<ListBloodDonationRequestsResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodDonationRequests": n => { listBloodDonationRequestsResponse.bloodDonationRequests = n.getCollectionOfObjectValues<BloodDonationRequestDTO>(createBloodDonationRequestDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListBloodTansfusionCentersResponse(listBloodTansfusionCentersResponse: Partial<ListBloodTansfusionCentersResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodTansfusionCenters": n => { listBloodTansfusionCentersResponse.bloodTansfusionCenters = n.getCollectionOfObjectValues<BloodTansfusionCenterExDTO>(createBloodTansfusionCenterExDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListCommunesEndpointResponse(listCommunesEndpointResponse: Partial<ListCommunesEndpointResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "communes": n => { listCommunesEndpointResponse.communes = n.getCollectionOfObjectValues<CommuneDTO>(createCommuneDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListPledgesResponse(listPledgesResponse: Partial<ListPledgesResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodDonationPledges": n => { listPledgesResponse.bloodDonationPledges = n.getCollectionOfObjectValues<BloodDonationPledgeDTO>(createBloodDonationPledgeDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoListWilayasResponse(listWilayasResponse: Partial<ListWilayasResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "wilayas": n => { listWilayasResponse.wilayas = n.getCollectionOfObjectValues<WilayaDTO>(createWilayaDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginRequest(loginRequest: Partial<LoginRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { loginRequest.email = n.getStringValue(); },
        "password": n => { loginRequest.password = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProblemDetails(problemDetails: Partial<ProblemDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { problemDetails.detail = n.getStringValue(); },
        "errors": n => { problemDetails.errors = n.getCollectionOfObjectValues<ProblemDetails_Error>(createProblemDetails_ErrorFromDiscriminatorValue); },
        "instance": n => { problemDetails.instance = n.getStringValue() ?? "/api/route"; },
        "status": n => { problemDetails.status = n.getNumberValue(); },
        "title": n => { problemDetails.title = n.getStringValue() ?? "One or more validation errors occurred."; },
        "traceId": n => { problemDetails.traceId = n.getStringValue() ?? "0HMPNHL0JHL76:00000001"; },
        "type": n => { problemDetails.type = n.getStringValue() ?? "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"; },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProblemDetails_Error(problemDetails_Error: Partial<ProblemDetails_Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { problemDetails_Error.code = n.getStringValue(); },
        "name": n => { problemDetails_Error.name = n.getStringValue() ?? "Error or field name"; },
        "reason": n => { problemDetails_Error.reason = n.getStringValue() ?? "Error reason"; },
        "severity": n => { problemDetails_Error.severity = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegisterUserDto(registerUserDto: Partial<RegisterUserDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApplicationUserDTO(registerUserDto),
        "confirmPassword": n => { registerUserDto.confirmPassword = n.getStringValue(); },
        "email": n => { registerUserDto.email = n.getStringValue(); },
        "password": n => { registerUserDto.password = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegisterUserRequest(registerUserRequest: Partial<RegisterUserRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoRegisterUserDto(registerUserRequest),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateContributorRequest(updateContributorRequest: Partial<UpdateContributorRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { updateContributorRequest.id = n.getNumberValue(); },
        "name": n => { updateContributorRequest.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateContributorResponse(updateContributorResponse: Partial<UpdateContributorResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contributor": n => { updateContributorResponse.contributor = n.getObjectValue<ContributorRecord>(createContributorRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdatePledgeRequest(updatePledgeRequest: Partial<UpdatePledgeRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "evolutionStatus": n => { updatePledgeRequest.evolutionStatus = n.getNumberValue(); },
        "pledgeDate": n => { updatePledgeRequest.pledgeDate = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdatePledgeResponse(updatePledgeResponse: Partial<UpdatePledgeResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodDonationPledge": n => { updatePledgeResponse.bloodDonationPledge = n.getObjectValue<BloodDonationPledgeDTO>(createBloodDonationPledgeDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateProfileRequest(updateProfileRequest: Partial<UpdateProfileRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoUpdateUserDTO(updateProfileRequest),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateProfileResponse(updateProfileResponse: Partial<UpdateProfileResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "user": n => { updateProfileResponse.user = n.getObjectValue<ApplicationUserDTO>(createApplicationUserDTOFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateUserDTO(updateUserDTO: Partial<UpdateUserDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "communeId": n => { updateUserDTO.communeId = n.getNumberValue(); },
        "donorAvailability": n => { updateUserDTO.donorAvailability = n.getNumberValue(); },
        "donorBirthDate": n => { updateUserDTO.donorBirthDate = n.getDateValue(); },
        "donorBloodGroup": n => { updateUserDTO.donorBloodGroup = n.getNumberValue(); },
        "donorContactMethod": n => { updateUserDTO.donorContactMethod = n.getNumberValue(); },
        "donorExcludeFromPublicPortal": n => { updateUserDTO.donorExcludeFromPublicPortal = n.getBooleanValue(); },
        "donorName": n => { updateUserDTO.donorName = n.getStringValue(); },
        "donorNotesForBTC": n => { updateUserDTO.donorNotesForBTC = n.getStringValue(); },
        "donorTel": n => { updateUserDTO.donorTel = n.getStringValue(); },
        "donorWantToStayAnonymous": n => { updateUserDTO.donorWantToStayAnonymous = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWilayaDTO(wilayaDTO: Partial<WilayaDTO> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bloodTansfusionCenters": n => { wilayaDTO.bloodTansfusionCenters = n.getCollectionOfObjectValues<BloodTansfusionCenterDTO>(createBloodTansfusionCenterDTOFromDiscriminatorValue); },
        "communes": n => { wilayaDTO.communes = n.getCollectionOfObjectValues<CommuneDTO>(createCommuneDTOFromDiscriminatorValue); },
        "id": n => { wilayaDTO.id = n.getNumberValue(); },
        "name": n => { wilayaDTO.name = n.getStringValue(); },
    }
}
export interface DonorBloodTransferCenterSubscriptionsDTO extends Parsable {
    /**
     * The applicationUser property
     */
    applicationUser?: ApplicationUserDTO | null;
    /**
     * The applicationUserId property
     */
    applicationUserId?: string | null;
    /**
     * The bloodTansfusionCenter property
     */
    bloodTansfusionCenter?: BloodTansfusionCenterDTO | null;
    /**
     * The bloodTansfusionCenterId property
     */
    bloodTansfusionCenterId?: string | null;
    /**
     * The id property
     */
    id?: string | null;
}
export interface GetBTCsubscribedResponse extends Parsable {
    /**
     * The btCsubscribed property
     */
    btCsubscribed?: DonorBloodTransferCenterSubscriptionsDTO[] | null;
}
export interface GetDashboardStatsResponse extends Parsable {
    /**
     * The stats property
     */
    stats?: DashboardStatsDTO | null;
}
export interface GetUserByIdEndpointResponse extends Parsable {
    /**
     * The user property
     */
    user?: ApplicationUserDTO | null;
}
export interface ListApplicationUsersResponse extends Parsable {
    /**
     * The users property
     */
    users?: ApplicationUserDTO[] | null;
}
export interface ListBloodDonationRequestsResponse extends Parsable {
    /**
     * The bloodDonationRequests property
     */
    bloodDonationRequests?: BloodDonationRequestDTO[] | null;
}
export interface ListBloodTansfusionCentersResponse extends Parsable {
    /**
     * The bloodTansfusionCenters property
     */
    bloodTansfusionCenters?: BloodTansfusionCenterExDTO[] | null;
}
export interface ListCommunesEndpointResponse extends Parsable {
    /**
     * The communes property
     */
    communes?: CommuneDTO[] | null;
}
export interface ListPledgesResponse extends Parsable {
    /**
     * The bloodDonationPledges property
     */
    bloodDonationPledges?: BloodDonationPledgeDTO[] | null;
}
export interface ListWilayasResponse extends Parsable {
    /**
     * The wilayas property
     */
    wilayas?: WilayaDTO[] | null;
}
export interface LoginRequest extends Parsable {
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The password property
     */
    password?: string | null;
}
/**
 * RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:app.UseFastEndpoints(c => c.Errors.UseProblemDetails())
 */
export interface ProblemDetails extends ApiError, Parsable {
    /**
     * the details of the error
     */
    detail?: string | null;
    /**
     * The errors property
     */
    errors?: ProblemDetails_Error[] | null;
    /**
     * The instance property
     */
    instance?: string | null;
    /**
     * The status property
     */
    status?: number | null;
    /**
     * The title property
     */
    title?: string | null;
    /**
     * The traceId property
     */
    traceId?: string | null;
    /**
     * The type property
     */
    type?: string | null;
}
/**
 * the error details object
 */
export interface ProblemDetails_Error extends Parsable {
    /**
     * the code of the error
     */
    code?: string | null;
    /**
     * the name of the error or property of the dto that caused the error
     */
    name?: string | null;
    /**
     * the reason for the error
     */
    reason?: string | null;
    /**
     * the severity of the error
     */
    severity?: string | null;
}
export interface RegisterUserDto extends AdditionalDataHolder, ApplicationUserDTO, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The confirmPassword property
     */
    confirmPassword?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The password property
     */
    password?: string | null;
}
export interface RegisterUserRequest extends AdditionalDataHolder, Parsable, RegisterUserDto {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApplicationUserDTO(writer: SerializationWriter, applicationUserDTO: Partial<ApplicationUserDTO> | undefined | null = {}) : void {
    if (applicationUserDTO) {
        writer.writeNumberValue("communeId", applicationUserDTO.communeId);
        writer.writeNumberValue("donorAvailability", applicationUserDTO.donorAvailability);
        writer.writeDateValue("donorBirthDate", applicationUserDTO.donorBirthDate);
        writer.writeNumberValue("donorBloodGroup", applicationUserDTO.donorBloodGroup);
        writer.writeNumberValue("donorContactMethod", applicationUserDTO.donorContactMethod);
        writer.writeStringValue("donorCorrelationId", applicationUserDTO.donorCorrelationId);
        writer.writeBooleanValue("donorExcludeFromPublicPortal", applicationUserDTO.donorExcludeFromPublicPortal);
        writer.writeDateValue("donorLastDonationDate", applicationUserDTO.donorLastDonationDate);
        writer.writeStringValue("donorName", applicationUserDTO.donorName);
        writer.writeStringValue("donorNIN", applicationUserDTO.donorNIN);
        writer.writeStringValue("donorNotesForBTC", applicationUserDTO.donorNotesForBTC);
        writer.writeStringValue("donorTel", applicationUserDTO.donorTel);
        writer.writeBooleanValue("donorWantToStayAnonymous", applicationUserDTO.donorWantToStayAnonymous);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBloodDonationPledgeDTO(writer: SerializationWriter, bloodDonationPledgeDTO: Partial<BloodDonationPledgeDTO> | undefined | null = {}) : void {
    if (bloodDonationPledgeDTO) {
        writer.writeStringValue("applicationUserId", bloodDonationPledgeDTO.applicationUserId);
        writer.writeStringValue("bloodDonationRequestId", bloodDonationPledgeDTO.bloodDonationRequestId);
        writer.writeStringValue("cantBeDoneReason", bloodDonationPledgeDTO.cantBeDoneReason);
        writer.writeNumberValue("evolutionStatus", bloodDonationPledgeDTO.evolutionStatus);
        writer.writeStringValue("id", bloodDonationPledgeDTO.id);
        writer.writeDateValue("pledgeDate", bloodDonationPledgeDTO.pledgeDate);
        writer.writeDateValue("pledgeHonoredOrCanceledDate", bloodDonationPledgeDTO.pledgeHonoredOrCanceledDate);
        writer.writeDateValue("pledgeInitiatedDate", bloodDonationPledgeDTO.pledgeInitiatedDate);
        writer.writeStringValue("pledgeNotes", bloodDonationPledgeDTO.pledgeNotes);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBloodDonationRequestDTO(writer: SerializationWriter, bloodDonationRequestDTO: Partial<BloodDonationRequestDTO> | undefined | null = {}) : void {
    if (bloodDonationRequestDTO) {
        writer.writeNumberValue("bloodGroup", bloodDonationRequestDTO.bloodGroup);
        writer.writeObjectValue<BloodTansfusionCenterDTO>("bloodTansfusionCenter", bloodDonationRequestDTO.bloodTansfusionCenter, serializeBloodTansfusionCenterDTO);
        writer.writeStringValue("bloodTansfusionCenterId", bloodDonationRequestDTO.bloodTansfusionCenterId);
        writer.writeNumberValue("donationType", bloodDonationRequestDTO.donationType);
        writer.writeNumberValue("evolutionStatus", bloodDonationRequestDTO.evolutionStatus);
        writer.writeStringValue("id", bloodDonationRequestDTO.id);
        writer.writeStringValue("moreDetails", bloodDonationRequestDTO.moreDetails);
        writer.writeNumberValue("priority", bloodDonationRequestDTO.priority);
        writer.writeDateValue("requestDate", bloodDonationRequestDTO.requestDate);
        writer.writeDateValue("requestDueDate", bloodDonationRequestDTO.requestDueDate);
        writer.writeNumberValue("requestedQty", bloodDonationRequestDTO.requestedQty);
        writer.writeStringValue("serviceName", bloodDonationRequestDTO.serviceName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBloodTansfusionCenterDTO(writer: SerializationWriter, bloodTansfusionCenterDTO: Partial<BloodTansfusionCenterDTO> | undefined | null = {}) : void {
    if (bloodTansfusionCenterDTO) {
        writer.writeStringValue("address", bloodTansfusionCenterDTO.address);
        writer.writeCollectionOfObjectValues<BloodDonationRequestDTO>("bloodDonationRequests", bloodTansfusionCenterDTO.bloodDonationRequests, serializeBloodDonationRequestDTO);
        writer.writeStringValue("contact", bloodTansfusionCenterDTO.contact);
        writer.writeCollectionOfObjectValues<DonorBloodTransferCenterSubscriptionsDTO>("donorBloodTransferCenterSubscriptions", bloodTansfusionCenterDTO.donorBloodTransferCenterSubscriptions, serializeDonorBloodTransferCenterSubscriptionsDTO);
        writer.writeStringValue("email", bloodTansfusionCenterDTO.email);
        writer.writeStringValue("id", bloodTansfusionCenterDTO.id);
        writer.writeStringValue("name", bloodTansfusionCenterDTO.name);
        writer.writeStringValue("tel", bloodTansfusionCenterDTO.tel);
        writer.writeObjectValue<WilayaDTO>("wilaya", bloodTansfusionCenterDTO.wilaya, serializeWilayaDTO);
        writer.writeNumberValue("wilayaId", bloodTansfusionCenterDTO.wilayaId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBloodTansfusionCenterExDTO(writer: SerializationWriter, bloodTansfusionCenterExDTO: Partial<BloodTansfusionCenterExDTO> | undefined | null = {}) : void {
    if (bloodTansfusionCenterExDTO) {
        serializeBloodTansfusionCenterDTO(writer, bloodTansfusionCenterExDTO)
        writer.writeBooleanValue("loggedUserSubscribed", bloodTansfusionCenterExDTO.loggedUserSubscribed);
        writer.writeAdditionalData(bloodTansfusionCenterExDTO.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCommuneDTO(writer: SerializationWriter, communeDTO: Partial<CommuneDTO> | undefined | null = {}) : void {
    if (communeDTO) {
        writer.writeCollectionOfObjectValues<ApplicationUserDTO>("applicationUsers", communeDTO.applicationUsers, serializeApplicationUserDTO);
        writer.writeNumberValue("id", communeDTO.id);
        writer.writeStringValue("name", communeDTO.name);
        writer.writeObjectValue<WilayaDTO>("wilaya", communeDTO.wilaya, serializeWilayaDTO);
        writer.writeNumberValue("wilayaId", communeDTO.wilayaId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContributorDTO(writer: SerializationWriter, contributorDTO: Partial<ContributorDTO> | undefined | null = {}) : void {
    if (contributorDTO) {
        writer.writeNumberValue("id", contributorDTO.id);
        writer.writeStringValue("name", contributorDTO.name);
        writer.writeStringValue("phoneNumber", contributorDTO.phoneNumber);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContributorListResponse(writer: SerializationWriter, contributorListResponse: Partial<ContributorListResponse> | undefined | null = {}) : void {
    if (contributorListResponse) {
        writer.writeCollectionOfObjectValues<ContributorRecord>("contributors", contributorListResponse.contributors, serializeContributorRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContributorRecord(writer: SerializationWriter, contributorRecord: Partial<ContributorRecord> | undefined | null = {}) : void {
    if (contributorRecord) {
        writer.writeNumberValue("id", contributorRecord.id);
        writer.writeStringValue("name", contributorRecord.name);
        writer.writeStringValue("phoneNumber", contributorRecord.phoneNumber);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateContributorRequest(writer: SerializationWriter, createContributorRequest: Partial<CreateContributorRequest> | undefined | null = {}) : void {
    if (createContributorRequest) {
        writer.writeStringValue("name", createContributorRequest.name);
        writer.writeStringValue("phoneNumber", createContributorRequest.phoneNumber);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateContributorResponse(writer: SerializationWriter, createContributorResponse: Partial<CreateContributorResponse> | undefined | null = {}) : void {
    if (createContributorResponse) {
        writer.writeNumberValue("id", createContributorResponse.id);
        writer.writeStringValue("name", createContributorResponse.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatePledgeRequest(writer: SerializationWriter, createPledgeRequest: Partial<CreatePledgeRequest> | undefined | null = {}) : void {
    if (createPledgeRequest) {
        writer.writeStringValue("bloodDonationRequestId", createPledgeRequest.bloodDonationRequestId);
        writer.writeDateValue("pledgeDate", createPledgeRequest.pledgeDate);
        writer.writeStringValue("pledgeNotes", createPledgeRequest.pledgeNotes);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatePledgeResponse(writer: SerializationWriter, createPledgeResponse: Partial<CreatePledgeResponse> | undefined | null = {}) : void {
    if (createPledgeResponse) {
        writer.writeObjectValue<BloodDonationPledgeDTO>("bloodDonationPledge", createPledgeResponse.bloodDonationPledge, serializeBloodDonationPledgeDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateSubscriptionRequest(writer: SerializationWriter, createSubscriptionRequest: Partial<CreateSubscriptionRequest> | undefined | null = {}) : void {
    if (createSubscriptionRequest) {
        writer.writeStringValue("bloodTansfusionCenterId", createSubscriptionRequest.bloodTansfusionCenterId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateSubscriptionResponse(writer: SerializationWriter, createSubscriptionResponse: Partial<CreateSubscriptionResponse> | undefined | null = {}) : void {
    if (createSubscriptionResponse) {
        writer.writeObjectValue<DonorBloodTransferCenterSubscriptionsDTO>("subscription", createSubscriptionResponse.subscription, serializeDonorBloodTransferCenterSubscriptionsDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDashboardStatsDTO(writer: SerializationWriter, dashboardStatsDTO: Partial<DashboardStatsDTO> | undefined | null = {}) : void {
    if (dashboardStatsDTO) {
        writer.writeNumberValue("activePledges", dashboardStatsDTO.activePledges);
        writer.writeObjectValue<DashboardStatsDTO_pledgesByStatus>("pledgesByStatus", dashboardStatsDTO.pledgesByStatus, serializeDashboardStatsDTO_pledgesByStatus);
        writer.writeObjectValue<DashboardStatsDTO_requestsByBloodGroup>("requestsByBloodGroup", dashboardStatsDTO.requestsByBloodGroup, serializeDashboardStatsDTO_requestsByBloodGroup);
        writer.writeObjectValue<DashboardStatsDTO_requestsByWilaya>("requestsByWilaya", dashboardStatsDTO.requestsByWilaya, serializeDashboardStatsDTO_requestsByWilaya);
        writer.writeNumberValue("totalBloodCenters", dashboardStatsDTO.totalBloodCenters);
        writer.writeNumberValue("totalBloodRequests", dashboardStatsDTO.totalBloodRequests);
        writer.writeNumberValue("totalDonors", dashboardStatsDTO.totalDonors);
        writer.writeNumberValue("totalSubscriptions", dashboardStatsDTO.totalSubscriptions);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDashboardStatsDTO_pledgesByStatus(writer: SerializationWriter, dashboardStatsDTO_pledgesByStatus: Partial<DashboardStatsDTO_pledgesByStatus> | undefined | null = {}) : void {
    if (dashboardStatsDTO_pledgesByStatus) {
        writer.writeAdditionalData(dashboardStatsDTO_pledgesByStatus.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDashboardStatsDTO_requestsByBloodGroup(writer: SerializationWriter, dashboardStatsDTO_requestsByBloodGroup: Partial<DashboardStatsDTO_requestsByBloodGroup> | undefined | null = {}) : void {
    if (dashboardStatsDTO_requestsByBloodGroup) {
        writer.writeAdditionalData(dashboardStatsDTO_requestsByBloodGroup.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDashboardStatsDTO_requestsByWilaya(writer: SerializationWriter, dashboardStatsDTO_requestsByWilaya: Partial<DashboardStatsDTO_requestsByWilaya> | undefined | null = {}) : void {
    if (dashboardStatsDTO_requestsByWilaya) {
        writer.writeAdditionalData(dashboardStatsDTO_requestsByWilaya.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDonorBloodTransferCenterSubscriptionsDTO(writer: SerializationWriter, donorBloodTransferCenterSubscriptionsDTO: Partial<DonorBloodTransferCenterSubscriptionsDTO> | undefined | null = {}) : void {
    if (donorBloodTransferCenterSubscriptionsDTO) {
        writer.writeObjectValue<ApplicationUserDTO>("applicationUser", donorBloodTransferCenterSubscriptionsDTO.applicationUser, serializeApplicationUserDTO);
        writer.writeStringValue("applicationUserId", donorBloodTransferCenterSubscriptionsDTO.applicationUserId);
        writer.writeObjectValue<BloodTansfusionCenterDTO>("bloodTansfusionCenter", donorBloodTransferCenterSubscriptionsDTO.bloodTansfusionCenter, serializeBloodTansfusionCenterDTO);
        writer.writeStringValue("bloodTansfusionCenterId", donorBloodTransferCenterSubscriptionsDTO.bloodTansfusionCenterId);
        writer.writeStringValue("id", donorBloodTransferCenterSubscriptionsDTO.id);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetBTCsubscribedResponse(writer: SerializationWriter, getBTCsubscribedResponse: Partial<GetBTCsubscribedResponse> | undefined | null = {}) : void {
    if (getBTCsubscribedResponse) {
        writer.writeCollectionOfObjectValues<DonorBloodTransferCenterSubscriptionsDTO>("btCsubscribed", getBTCsubscribedResponse.btCsubscribed, serializeDonorBloodTransferCenterSubscriptionsDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetDashboardStatsResponse(writer: SerializationWriter, getDashboardStatsResponse: Partial<GetDashboardStatsResponse> | undefined | null = {}) : void {
    if (getDashboardStatsResponse) {
        writer.writeObjectValue<DashboardStatsDTO>("stats", getDashboardStatsResponse.stats, serializeDashboardStatsDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetUserByIdEndpointResponse(writer: SerializationWriter, getUserByIdEndpointResponse: Partial<GetUserByIdEndpointResponse> | undefined | null = {}) : void {
    if (getUserByIdEndpointResponse) {
        writer.writeObjectValue<ApplicationUserDTO>("user", getUserByIdEndpointResponse.user, serializeApplicationUserDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListApplicationUsersResponse(writer: SerializationWriter, listApplicationUsersResponse: Partial<ListApplicationUsersResponse> | undefined | null = {}) : void {
    if (listApplicationUsersResponse) {
        writer.writeCollectionOfObjectValues<ApplicationUserDTO>("users", listApplicationUsersResponse.users, serializeApplicationUserDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListBloodDonationRequestsResponse(writer: SerializationWriter, listBloodDonationRequestsResponse: Partial<ListBloodDonationRequestsResponse> | undefined | null = {}) : void {
    if (listBloodDonationRequestsResponse) {
        writer.writeCollectionOfObjectValues<BloodDonationRequestDTO>("bloodDonationRequests", listBloodDonationRequestsResponse.bloodDonationRequests, serializeBloodDonationRequestDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListBloodTansfusionCentersResponse(writer: SerializationWriter, listBloodTansfusionCentersResponse: Partial<ListBloodTansfusionCentersResponse> | undefined | null = {}) : void {
    if (listBloodTansfusionCentersResponse) {
        writer.writeCollectionOfObjectValues<BloodTansfusionCenterExDTO>("bloodTansfusionCenters", listBloodTansfusionCentersResponse.bloodTansfusionCenters, serializeBloodTansfusionCenterExDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListCommunesEndpointResponse(writer: SerializationWriter, listCommunesEndpointResponse: Partial<ListCommunesEndpointResponse> | undefined | null = {}) : void {
    if (listCommunesEndpointResponse) {
        writer.writeCollectionOfObjectValues<CommuneDTO>("communes", listCommunesEndpointResponse.communes, serializeCommuneDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListPledgesResponse(writer: SerializationWriter, listPledgesResponse: Partial<ListPledgesResponse> | undefined | null = {}) : void {
    if (listPledgesResponse) {
        writer.writeCollectionOfObjectValues<BloodDonationPledgeDTO>("bloodDonationPledges", listPledgesResponse.bloodDonationPledges, serializeBloodDonationPledgeDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeListWilayasResponse(writer: SerializationWriter, listWilayasResponse: Partial<ListWilayasResponse> | undefined | null = {}) : void {
    if (listWilayasResponse) {
        writer.writeCollectionOfObjectValues<WilayaDTO>("wilayas", listWilayasResponse.wilayas, serializeWilayaDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginRequest(writer: SerializationWriter, loginRequest: Partial<LoginRequest> | undefined | null = {}) : void {
    if (loginRequest) {
        writer.writeStringValue("email", loginRequest.email);
        writer.writeStringValue("password", loginRequest.password);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProblemDetails(writer: SerializationWriter, problemDetails: Partial<ProblemDetails> | undefined | null = {}) : void {
    if (problemDetails) {
        writer.writeStringValue("detail", problemDetails.detail);
        writer.writeCollectionOfObjectValues<ProblemDetails_Error>("errors", problemDetails.errors, serializeProblemDetails_Error);
        writer.writeStringValue("instance", problemDetails.instance ?? "/api/route");
        writer.writeNumberValue("status", problemDetails.status);
        writer.writeStringValue("title", problemDetails.title ?? "One or more validation errors occurred.");
        writer.writeStringValue("traceId", problemDetails.traceId ?? "0HMPNHL0JHL76:00000001");
        writer.writeStringValue("type", problemDetails.type ?? "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1");
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProblemDetails_Error(writer: SerializationWriter, problemDetails_Error: Partial<ProblemDetails_Error> | undefined | null = {}) : void {
    if (problemDetails_Error) {
        writer.writeStringValue("code", problemDetails_Error.code);
        writer.writeStringValue("name", problemDetails_Error.name ?? "Error or field name");
        writer.writeStringValue("reason", problemDetails_Error.reason ?? "Error reason");
        writer.writeStringValue("severity", problemDetails_Error.severity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegisterUserDto(writer: SerializationWriter, registerUserDto: Partial<RegisterUserDto> | undefined | null = {}) : void {
    if (registerUserDto) {
        serializeApplicationUserDTO(writer, registerUserDto)
        writer.writeStringValue("confirmPassword", registerUserDto.confirmPassword);
        writer.writeStringValue("email", registerUserDto.email);
        writer.writeStringValue("password", registerUserDto.password);
        writer.writeAdditionalData(registerUserDto.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegisterUserRequest(writer: SerializationWriter, registerUserRequest: Partial<RegisterUserRequest> | undefined | null = {}) : void {
    if (registerUserRequest) {
        serializeRegisterUserDto(writer, registerUserRequest)
        writer.writeAdditionalData(registerUserRequest.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateContributorRequest(writer: SerializationWriter, updateContributorRequest: Partial<UpdateContributorRequest> | undefined | null = {}) : void {
    if (updateContributorRequest) {
        writer.writeNumberValue("id", updateContributorRequest.id);
        writer.writeStringValue("name", updateContributorRequest.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateContributorResponse(writer: SerializationWriter, updateContributorResponse: Partial<UpdateContributorResponse> | undefined | null = {}) : void {
    if (updateContributorResponse) {
        writer.writeObjectValue<ContributorRecord>("contributor", updateContributorResponse.contributor, serializeContributorRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdatePledgeRequest(writer: SerializationWriter, updatePledgeRequest: Partial<UpdatePledgeRequest> | undefined | null = {}) : void {
    if (updatePledgeRequest) {
        writer.writeNumberValue("evolutionStatus", updatePledgeRequest.evolutionStatus);
        writer.writeDateValue("pledgeDate", updatePledgeRequest.pledgeDate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdatePledgeResponse(writer: SerializationWriter, updatePledgeResponse: Partial<UpdatePledgeResponse> | undefined | null = {}) : void {
    if (updatePledgeResponse) {
        writer.writeObjectValue<BloodDonationPledgeDTO>("bloodDonationPledge", updatePledgeResponse.bloodDonationPledge, serializeBloodDonationPledgeDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateProfileRequest(writer: SerializationWriter, updateProfileRequest: Partial<UpdateProfileRequest> | undefined | null = {}) : void {
    if (updateProfileRequest) {
        serializeUpdateUserDTO(writer, updateProfileRequest)
        writer.writeAdditionalData(updateProfileRequest.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateProfileResponse(writer: SerializationWriter, updateProfileResponse: Partial<UpdateProfileResponse> | undefined | null = {}) : void {
    if (updateProfileResponse) {
        writer.writeObjectValue<ApplicationUserDTO>("user", updateProfileResponse.user, serializeApplicationUserDTO);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateUserDTO(writer: SerializationWriter, updateUserDTO: Partial<UpdateUserDTO> | undefined | null = {}) : void {
    if (updateUserDTO) {
        writer.writeNumberValue("communeId", updateUserDTO.communeId);
        writer.writeNumberValue("donorAvailability", updateUserDTO.donorAvailability);
        writer.writeDateValue("donorBirthDate", updateUserDTO.donorBirthDate);
        writer.writeNumberValue("donorBloodGroup", updateUserDTO.donorBloodGroup);
        writer.writeNumberValue("donorContactMethod", updateUserDTO.donorContactMethod);
        writer.writeBooleanValue("donorExcludeFromPublicPortal", updateUserDTO.donorExcludeFromPublicPortal);
        writer.writeStringValue("donorName", updateUserDTO.donorName);
        writer.writeStringValue("donorNotesForBTC", updateUserDTO.donorNotesForBTC);
        writer.writeStringValue("donorTel", updateUserDTO.donorTel);
        writer.writeBooleanValue("donorWantToStayAnonymous", updateUserDTO.donorWantToStayAnonymous);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWilayaDTO(writer: SerializationWriter, wilayaDTO: Partial<WilayaDTO> | undefined | null = {}) : void {
    if (wilayaDTO) {
        writer.writeCollectionOfObjectValues<BloodTansfusionCenterDTO>("bloodTansfusionCenters", wilayaDTO.bloodTansfusionCenters, serializeBloodTansfusionCenterDTO);
        writer.writeCollectionOfObjectValues<CommuneDTO>("communes", wilayaDTO.communes, serializeCommuneDTO);
        writer.writeNumberValue("id", wilayaDTO.id);
        writer.writeStringValue("name", wilayaDTO.name);
    }
}
export interface UpdateContributorRequest extends Parsable {
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
}
export interface UpdateContributorResponse extends Parsable {
    /**
     * The contributor property
     */
    contributor?: ContributorRecord | null;
}
export interface UpdatePledgeRequest extends Parsable {
    /**
     * The evolutionStatus property
     */
    evolutionStatus?: number | null;
    /**
     * The pledgeDate property
     */
    pledgeDate?: Date | null;
}
export interface UpdatePledgeResponse extends Parsable {
    /**
     * The bloodDonationPledge property
     */
    bloodDonationPledge?: BloodDonationPledgeDTO | null;
}
export interface UpdateProfileRequest extends AdditionalDataHolder, Parsable, UpdateUserDTO {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UpdateProfileResponse extends Parsable {
    /**
     * The user property
     */
    user?: ApplicationUserDTO | null;
}
export interface UpdateUserDTO extends Parsable {
    /**
     * The communeId property
     */
    communeId?: number | null;
    /**
     * The donorAvailability property
     */
    donorAvailability?: number | null;
    /**
     * The donorBirthDate property
     */
    donorBirthDate?: Date | null;
    /**
     * The donorBloodGroup property
     */
    donorBloodGroup?: number | null;
    /**
     * The donorContactMethod property
     */
    donorContactMethod?: number | null;
    /**
     * The donorExcludeFromPublicPortal property
     */
    donorExcludeFromPublicPortal?: boolean | null;
    /**
     * The donorName property
     */
    donorName?: string | null;
    /**
     * The donorNotesForBTC property
     */
    donorNotesForBTC?: string | null;
    /**
     * The donorTel property
     */
    donorTel?: string | null;
    /**
     * The donorWantToStayAnonymous property
     */
    donorWantToStayAnonymous?: boolean | null;
}
export interface WilayaDTO extends Parsable {
    /**
     * The bloodTansfusionCenters property
     */
    bloodTansfusionCenters?: BloodTansfusionCenterDTO[] | null;
    /**
     * The communes property
     */
    communes?: CommuneDTO[] | null;
    /**
     * The id property
     */
    id?: number | null;
    /**
     * The name property
     */
    name?: string | null;
}
/* tslint:enable */
/* eslint-enable */
