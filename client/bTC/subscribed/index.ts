/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createGetBTCsubscribedResponseFromDiscriminatorValue, type GetBTCsubscribedResponse } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /BTC/subscribed
 */
export interface SubscribedRequestBuilder extends BaseRequestBuilder<SubscribedRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetBTCsubscribedResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<SubscribedRequestBuilderGetQueryParameters> | undefined) : Promise<GetBTCsubscribedResponse | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SubscribedRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
export interface SubscribedRequestBuilderGetQueryParameters {
    filter?: string;
    level?: number;
    loggedUserId?: string;
}
/**
 * Uri template for the request builder.
 */
export const SubscribedRequestBuilderUriTemplate = "{+baseurl}/BTC/subscribed{?filter*,level*,loggedUserId*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const SubscribedRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SubscribedRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createGetBTCsubscribedResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
