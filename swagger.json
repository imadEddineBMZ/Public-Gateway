{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "BD.PublicPortal.Api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:57679"
    }
  ],
  "paths": {
    "/Wilayas": {
      "get": {
        "tags": [
          "Wilayas"
        ],
        "operationId": "BDPublicPortalApiFeaturesWilayasListWilayasEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWilayasResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "BDPublicPortalApiFeaturesSubscriptionsCreateSubscriptionEndpoint",
        "requestBody": {
          "x-name": "CreateSubscriptionRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/Subscriptions/btc/{btcId}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "BDPublicPortalApiFeaturesSubscriptionsDeleteSubscriptionByBtcEndpoint",
        "parameters": [
          {
            "name": "btcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "BDPublicPortalApiFeaturesSubscriptionsDeleteSubscriptionEndpoint",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/Pledges": {
      "post": {
        "tags": [
          "Pledges"
        ],
        "operationId": "BDPublicPortalApiFeaturesPledgesCreatePledgeEndpoint",
        "requestBody": {
          "x-name": "CreatePledgeRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePledgeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePledgeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Pledges"
        ],
        "operationId": "BDPublicPortalApiFeaturesPledgesListPledgesEndpoint",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BloodDonationPledgeSpecificationFilter"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPledgesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/Pledges/{pledgeId}": {
      "put": {
        "tags": [
          "Pledges"
        ],
        "operationId": "BDPublicPortalApiFeaturesPledgesUpdatePledgeEndpoint",
        "parameters": [
          {
            "name": "pledgeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdatePledgeRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePledgeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePledgeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/donor/profile": {
      "patch": {
        "tags": [
          "Donor"
        ],
        "summary": "Update donor profile.",
        "operationId": "BDPublicPortalApiFeaturesIdentityManagementDonorUpdateProfileEndpoint",
        "requestBody": {
          "x-name": "UpdateProfileRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user.",
        "operationId": "BDPublicPortalApiFeaturesIdentityManagementUsersLoginEndpoint",
        "requestBody": {
          "x-name": "LoginRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user.",
        "operationId": "BDPublicPortalApiFeaturesIdentityManagementUsersRegisterEndpoint",
        "requestBody": {
          "x-name": "RegisterUserRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "BDPublicPortalApiFeaturesIdentityManagementUsersListListApplicationUsersEndpoint",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApplicationUserSpecificationFilter"
                }
              ]
            }
          },
          {
            "name": "loggedUserId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListApplicationUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "BDPublicPortalApiFeaturesIdentityManagementUsersGetByIdGetUserByIdEndpoint",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByIdEndpointResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/enums/{enumsList}": {
      "get": {
        "tags": [
          "Enums"
        ],
        "operationId": "BDPublicPortalApiFeaturesEnumsGetEnumsLabelsEndPoint",
        "parameters": [
          {
            "name": "enumsList",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Dashboard/stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "BDPublicPortalApiFeaturesDashboardGetDashboardStatsEndpoint",
        "parameters": [
          {
            "name": "loggedUserId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Contributors": {
      "post": {
        "tags": [
          "Contributors"
        ],
        "summary": "Create a new Contributor",
        "description": "Creates a new Contributor given a name.",
        "operationId": "BDPublicPortalApiFeaturesContributorsCreate",
        "requestBody": {
          "x-name": "CreateContributorRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContributorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContributorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contributors"
        ],
        "summary": "List all Contributors",
        "description": "List all contributors - returns a ContributorListResponse containing the Contributors.",
        "operationId": "BDPublicPortalApiFeaturesContributorsList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Contributors/{contributorId}": {
      "delete": {
        "tags": [
          "Contributors"
        ],
        "summary": "Delete a Contributor.",
        "description": "Delete a Contributor by providing a valid integer id.",
        "operationId": "BDPublicPortalApiFeaturesContributorsDelete",
        "parameters": [
          {
            "name": "contributorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contributors"
        ],
        "summary": "Get a Contributor by integer ID.",
        "description": "Takes a positive integer ID and returns a matching Contributor record.",
        "operationId": "BDPublicPortalApiFeaturesContributorsGetById",
        "parameters": [
          {
            "name": "contributorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributorDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contributors"
        ],
        "summary": "Update an existing Contributor.",
        "description": "Update an existing Contributor by providing a fully defined replacement set of values.\nSee: https://stackoverflow.com/questions/60761955/rest-update-best-practice-put-collection-id-without-id-in-body-vs-put-collecti",
        "operationId": "BDPublicPortalApiFeaturesContributorsUpdate",
        "parameters": [
          {
            "name": "contributorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateContributorRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContributorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContributorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/communes/{wilayaId}": {
      "get": {
        "tags": [
          "Communes"
        ],
        "operationId": "BDPublicPortalApiFeaturesCommunesListCommunesEndpoint",
        "parameters": [
          {
            "name": "wilayaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommunesEndpointResponse"
                }
              }
            }
          }
        }
      }
    },
    "/BTC/subscribed": {
      "get": {
        "tags": [
          "BTC"
        ],
        "operationId": "BDPublicPortalApiFeaturesBTCBTCsubsribed",
        "parameters": [
          {
            "name": "paginationTake",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBTCsubscribedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/BTC": {
      "get": {
        "tags": [
          "BTC"
        ],
        "operationId": "BDPublicPortalApiFeaturesBTCListBloodDonationRequestsEndpoint",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BloodTransfusionCenterSpecificationFilter"
                }
              ]
            }
          },
          {
            "name": "loggedUserId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBloodTansfusionCentersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/BloodDonationRequests": {
      "get": {
        "tags": [
          "Blooddonationrequests"
        ],
        "operationId": "BDPublicPortalApiFeaturesBloodDonationRequestsListBloodDonationRequestsEndpoint",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BloodDonationRequestSpecificationFilter"
                }
              ]
            }
          },
          {
            "name": "loggedUserId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBloodDonationRequestsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ListWilayasResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wilayas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WilayaDTO"
            }
          }
        }
      },
      "WilayaDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "bloodTansfusionCenters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BloodTansfusionCenterDTO"
            }
          },
          "communes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CommuneDTO"
            }
          }
        }
      },
      "BloodTansfusionCenterDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tel": {
            "type": "string",
            "nullable": true
          },
          "wilayaId": {
            "type": "integer",
            "format": "int32"
          },
          "donorBloodTransferCenterSubscriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DonorBloodTransferCenterSubscriptionsDTO"
            }
          },
          "bloodDonationRequests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BloodDonationRequestDTO"
            }
          },
          "wilaya": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WilayaDTO"
              }
            ]
          }
        }
      },
      "DonorBloodTransferCenterSubscriptionsDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "bloodTansfusionCenterId": {
            "type": "string",
            "format": "guid"
          },
          "applicationUserId": {
            "type": "string",
            "format": "guid"
          },
          "bloodTansfusionCenter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodTansfusionCenterDTO"
              }
            ]
          },
          "applicationUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            ]
          }
        }
      },
      "ApplicationUserDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "donorName",
          "donorBirthDate",
          "donorBloodGroup",
          "donorNIN"
        ],
        "properties": {
          "donorCorrelationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "donorWantToStayAnonymous": {
            "type": "boolean",
            "nullable": true
          },
          "donorExcludeFromPublicPortal": {
            "type": "boolean",
            "nullable": true
          },
          "donorAvailability": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DonorAvailability"
              }
            ]
          },
          "donorContactMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DonorContactMethod"
              }
            ]
          },
          "donorName": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "donorBirthDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1,
            "nullable": false
          },
          "donorBloodGroup": {
            "minLength": 1,
            "nullable": false,
            "$ref": "#/components/schemas/BloodGroup"
          },
          "donorNIN": {
            "type": "string",
            "maxLength": 18,
            "minLength": 18,
            "nullable": false
          },
          "donorTel": {
            "type": "string",
            "nullable": true
          },
          "donorNotesForBTC": {
            "type": "string",
            "nullable": true
          },
          "donorLastDonationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "communeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DonorAvailability": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Morning",
          "Afternoon",
          "Day",
          "Night",
          "AllTime"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "DonorContactMethod": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Call",
          "Text",
          "All"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "BloodGroup": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "AB_POSITIVE",
          "AB_NEGATIVE",
          "A_POSITIVE",
          "A_NEGATIVE",
          "B_POSITIVE",
          "B_NEGATIVE",
          "O_POSITIVE",
          "O_NEGATIVE"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "BloodDonationRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "evolutionStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodDonationRequestEvolutionStatus"
              }
            ]
          },
          "donationType": {
            "$ref": "#/components/schemas/BloodDonationType"
          },
          "bloodGroup": {
            "$ref": "#/components/schemas/BloodGroup"
          },
          "requestedQty": {
            "type": "integer",
            "format": "int32"
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/BloodDonationRequestPriority"
          },
          "moreDetails": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "bloodTansfusionCenterId": {
            "type": "string",
            "format": "guid"
          },
          "bloodTansfusionCenter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodTansfusionCenterDTO"
              }
            ]
          }
        }
      },
      "BloodDonationRequestEvolutionStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Initiated",
          "Waiting",
          "PartiallyResolved",
          "Resolved",
          "Canceled"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "BloodDonationType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "WholeBlood",
          "Platelet",
          "Plasma"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "BloodDonationRequestPriority": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Low",
          "Normal",
          "Critical"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "CommuneDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "wilayaId": {
            "type": "integer",
            "format": "int32"
          },
          "wilaya": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WilayaDTO"
              }
            ]
          },
          "applicationUsers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ApplicationUserDTO"
            }
          }
        }
      },
      "CreateSubscriptionResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/DonorBloodTransferCenterSubscriptionsDTO"
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodTansfusionCenterId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DeleteSubscriptionByBtcRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DeleteSubscriptionRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "CreatePledgeResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodDonationPledge": {
            "$ref": "#/components/schemas/BloodDonationPledgeDTO"
          }
        }
      },
      "BloodDonationPledgeDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "evolutionStatus": {
            "$ref": "#/components/schemas/BloodDonationPladgeEvolutionStatus"
          },
          "pledgeInitiatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "pledgeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pledgeHonoredOrCanceledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pledgeNotes": {
            "type": "string",
            "nullable": true
          },
          "cantBeDoneReason": {
            "type": "string",
            "nullable": true
          },
          "bloodDonationRequestId": {
            "type": "string",
            "format": "guid"
          },
          "applicationUserId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "BloodDonationPladgeEvolutionStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Initiated",
          "Honored",
          "CanceledByInitiaor",
          "CanceledByServiceNotNeeded",
          "CanceledByServiceCantBeDone",
          "CanceledTimeout"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "CreatePledgeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "bloodDonationRequestId"
        ],
        "properties": {
          "bloodDonationRequestId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "pledgeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pledgeNotes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\napp.UseFastEndpoints(c => c.Errors.UseProblemDetails())",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "description": "the details of the error",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "description": "the error details object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the error or property of the dto that caused the error",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "description": "the code of the error",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "the severity of the error",
            "nullable": true
          }
        }
      },
      "ListPledgesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodDonationPledges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BloodDonationPledgeDTO"
            }
          }
        }
      },
      "ListPledgesRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BloodDonationPledgeSpecificationFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "evolutionStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodDonationPladgeEvolutionStatus"
              }
            ]
          },
          "paginationTake": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paginationSkip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UpdatePledgeResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodDonationPledge": {
            "$ref": "#/components/schemas/BloodDonationPledgeDTO"
          }
        }
      },
      "UpdatePledgeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "evolutionStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodDonationPladgeEvolutionStatus"
              }
            ]
          },
          "pledgeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UpdateProfileResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            ]
          }
        }
      },
      "UpdateProfileRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateUserDTO"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UpdateUserDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "donorWantToStayAnonymous": {
            "type": "boolean",
            "nullable": true
          },
          "donorExcludeFromPublicPortal": {
            "type": "boolean",
            "nullable": true
          },
          "donorAvailability": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DonorAvailability"
              }
            ]
          },
          "donorContactMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DonorContactMethod"
              }
            ]
          },
          "donorName": {
            "type": "string",
            "nullable": true
          },
          "donorBirthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "donorBloodGroup": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodGroup"
              }
            ]
          },
          "donorTel": {
            "type": "string",
            "nullable": true
          },
          "donorNotesForBTC": {
            "type": "string",
            "nullable": true
          },
          "communeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RegisterUserRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterUserDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "RegisterUserDto": {
        "required": [
          "email",
          "password"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationUserDTO"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "minLength": 1,
                "pattern": "^[^@]+@[^@]+$",
                "nullable": false
              },
              "password": {
                "type": "string",
                "minLength": 6,
                "nullable": false
              },
              "confirmPassword": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ListApplicationUsersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUserDTO"
            }
          }
        }
      },
      "ListApplicationUsersRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ApplicationUserSpecificationFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "communeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wilayaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "donorBloodGroup": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodGroup"
              }
            ]
          },
          "donorContactMethod": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DonorContactMethod"
              }
            ]
          },
          "paginationTake": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paginationSkip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GetUserByIdEndpointResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            ]
          }
        }
      },
      "GetUserByIdEndpointRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "GetEnumsLabelsEndPointRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "GetDashboardStatsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stats": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DashboardStatsDTO"
              }
            ]
          }
        }
      },
      "DashboardStatsDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalDonors": {
            "type": "integer",
            "format": "int32"
          },
          "totalBloodRequests": {
            "type": "integer",
            "format": "int32"
          },
          "activePledges": {
            "type": "integer",
            "format": "int32"
          },
          "totalBloodCenters": {
            "type": "integer",
            "format": "int32"
          },
          "totalSubscriptions": {
            "type": "integer",
            "format": "int32"
          },
          "requestsByBloodGroup": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "requestsByWilaya": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pledgesByStatus": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "GetDashboardStatsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateContributorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateContributorRequest": {
        "type": "object",
        "example": {
          "name": "Contributor Name",
          "phoneNumber": null
        },
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false,
            "example": "Contributor Name"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "example": null
          }
        }
      },
      "DeleteContributorRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ContributorDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetContributorByIdRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ContributorListResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contributors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContributorRecord"
            }
          }
        }
      },
      "ContributorRecord": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateContributorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contributor": {
            "$ref": "#/components/schemas/ContributorRecord"
          }
        }
      },
      "UpdateContributorRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false
          }
        }
      },
      "ListCommunesEndpointResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "communes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommuneDTO"
            }
          }
        }
      },
      "ListCommunesEndpointRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "GetBTCsubscribedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "btCsubscribed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonorBloodTransferCenterSubscriptionsDTO"
            }
          }
        }
      },
      "GetBTCsubscribedRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ListBloodTansfusionCentersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodTansfusionCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BloodTansfusionCenterExDTO"
            }
          }
        }
      },
      "BloodTansfusionCenterExDTO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BloodTansfusionCenterDTO"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "loggedUserSubscribed": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListBloodTransfusionCenterRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BloodTransfusionCenterSpecificationFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wilayaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paginationTake": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paginationSkip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ListBloodDonationRequestsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bloodDonationRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BloodDonationRequestDTO"
            }
          }
        }
      },
      "ListBloodDonationRequestsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BloodDonationRequestSpecificationFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wilayaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reqPriority": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodDonationRequestPriority"
              }
            ]
          },
          "bloodGroup": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodGroup"
              }
            ]
          },
          "bloodDonationType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BloodDonationType"
              }
            ]
          },
          "subscriptionsOnly": {
            "type": "boolean",
            "nullable": true
          },
          "userSubscribedCenters": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "illigibilityOnly": {
            "type": "boolean",
            "nullable": true
          },
          "illigibilityGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BloodGroup"
            }
          },
          "paginationTake": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paginationSkip": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}